name: Python Code Quality
on: [push]

jobs:
  
        # cache: 'venv' # Optional: uncomment to cache the virtual environment 

  linting:
    runs-on: [windows-latest]

    steps:
      - name: checkout repo
        uses: actions/checkout@v4
    #  - uses: ./.github/actions/setup
     
      - name: Restore global uv cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
            .venv
          key: uv-main-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-main-

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.20"
          python-version: "3.12"
          enable-cache: false

      - name: Install dependencies
        run: uv sync --group dev
      - run: uvx ruff check .


  formatting:
    runs-on: [windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uvx ruff format --check .
  type_consistency:
    runs-on: [windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv run pyright .
  tests:
    runs-on: [windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv run pytest -v --durations=0 --cov --cov-report=xml
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    runs-on: [windows-latest]
    needs: [linting, formatting, type_consistency, tests]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv build
